{"version":3,"sources":["components/AddCategory.jsx","helpers/GetGifts.jsx","components/GifCard.jsx","components/GifResults.jsx","Hooks/useFetchGifs.jsx","components/GifApp.jsx","index.js"],"names":["AddCategory","setcategorias","useState","buscador","setbuscador","onSubmit","e","preventDefault","trim","length","console","log","categorias","type","placeholder","onChange","target","value","getGifts","busqueda","a","api","encodeURI","fetch","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifCard","className","src","href","GifResults","categoria","loading","state","setstate","useEffect","then","gif","useFetchGifs","GifApp","i","ReactDOM","render","document","getElementById"],"mappings":"qLAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACdC,mBAAS,IADK,mBACvCC,EADuC,KAC7BC,EAD6B,KAgB9C,OACE,8BACE,sBAAMC,SAZW,SAACC,GACnBA,EAAEC,iBACCJ,EAASK,OAAOC,OAAS,IACzBC,QAAQC,IAAIR,GACZF,GAAe,SAACW,GAAD,OAAiBT,GAAjB,mBAA6BS,OAC5CR,EAAY,MAOd,SACE,uBACES,KAAK,OACLC,YAAY,gCACZC,SAnBO,SAACT,GACdF,EAAYE,EAAEU,OAAOC,QAmBfA,MAAOd,S,uBCxBJe,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,0FAC0EC,UAAUH,GADpF,qBAEFI,MAAMF,GAFJ,cAEdG,EAFc,gBAGGA,EAAIC,OAHP,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARlB,kBAYbL,GAZa,4CAAH,sDCCRQ,EAAU,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,IAAID,EAAW,EAAXA,MAEzB,OADArB,QAAQC,IAAIqB,GAER,sBAAKI,UAAU,yCAAf,UACE,qBAAKC,IAAKL,EAAMD,MAAOA,IACrB,4BAAIA,IACL,mBAAGf,OAAO,UAAUsB,KAAMN,EAA1B,yBCHEO,EAAa,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFhB,SAACqB,GAAc,IAAD,EAEZtC,mBAAS,CAC/BwB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAdAC,qBAAU,WACN1B,EAASsB,GACRK,MAAK,SAAAC,GACGH,EAAS,CACNjB,KAAMoB,EACNL,SAAS,SAItB,CAACD,IAKGE,EDXiBK,CAAa5B,GAA/BO,EAPkC,EAOlCA,KAAMe,EAP4B,EAO5BA,QAKd,OAGE,qCACC,oBAAIL,UAAU,2CAAd,SAA0DjB,IACzDsB,GAAW,oBAAIL,UAAU,SAAd,0BACZ,qBAAKA,UAAU,MAAf,SACIV,EAAKE,KAAI,SAACkB,GAAD,OACN,cAAC,EAAD,CAAsBf,MAAOe,EAAIf,MAAOC,IAAKc,EAAId,KAAnCc,EAAIhB,aEMfkB,MA1Bf,WAAkB,MAEoB9C,mBAAS,IAF7B,mBAETU,EAFS,KAEGX,EAFH,KAIhB,OACE,gCACE,oBAAImC,UAAU,cAAd,oBACA,cAAC,EAAD,CAAanC,cAAeA,IAC5B,uBACCW,EAAWgB,KAAI,SAACY,EAAWS,GAMxB,OAKE,aAHA,CAGC,EAAD,CAAoB9B,SAAUqB,GAAbS,UCnB7BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1e89e5d6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Proptypes from 'prop-types';\r\nexport const AddCategory = ({setcategorias}) => {\r\n  const [buscador, setbuscador] = useState('');\r\n\r\n  const buscar = (e) => {\r\n    setbuscador(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n     e.preventDefault();\r\n     if(buscador.trim().length > 0){\r\n        console.log(buscador);\r\n        setcategorias( (categorias) => [buscador,...categorias]);\r\n        setbuscador('');\r\n     }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Busca el gif que mas te guste\"\r\n          onChange={buscar}\r\n          value={buscador}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setcategorias : Proptypes.func.isRequired,\r\n    \r\n}\r\n\r\n","\r\nexport const getGifts = async(busqueda) => { \r\n    const api =`https://api.giphy.com/v1/gifs/search?api_key=vMIbRknwqqDI2toM3VnP98396l37RhAB&q=${encodeURI(busqueda)}&limit=8`;\r\n    const res = await fetch(api);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      }\r\n    })\r\n   \r\n    return gifs;\r\n   // console.log(gifs);\r\n  };","import React from 'react'\r\n\r\nexport const GifCard = ({url,title}) => {\r\n    console.log(url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n          <img src={url}  title={title}/>\r\n            <p>{title}</p>\r\n           <a target=\"__blank\" href={url}>Visitar</a>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { getGifts } from \"../helpers/GetGifts\";\r\nimport { GifCard } from \"./GifCard\";\r\nimport { useFetchGifs } from \"../Hooks/useFetchGifs\";\r\n\r\nexport const GifResults = ({ busqueda }) => {\r\n  //   const [images, setimages] = useState([]);\r\n  //   useEffect(() => {\r\n  //     getGifts(busqueda).then(\r\n  //         img => setimages(img)\r\n  //     )\r\n  //   });\r\n  const { data, loading } = useFetchGifs(busqueda);\r\n  //console.log(data);\r\n  //console.log(loading);\r\n  //console.log(data);\r\n\r\n  return (\r\n    \r\n\r\n    <>\r\n     <h3 className=\"titulo animate__animated animate__fadeIn\">{busqueda}</h3>\r\n     {loading && <h2 className=\"titulo\">Cargando....</h2>}\r\n     <div className=\"row\">\r\n        {data.map((gif) => (\r\n            <GifCard key={gif.id} title={gif.title} url={gif.url} />\r\n        ))}\r\n    </div>\r\n    </>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n    <> \r\n      { loading ? (\r\n        <h2 className=\"titulo\">Cargando....</h2>\r\n      )\r\n      : (\r\n        <>\r\n        {data.length > 0 && ( <h3 className=\"titulo  animate__animated animate__fadeIn\">{busqueda}</h3>)}\r\n        <div className=\"row\">\r\n        {data.map((gif) => (\r\n            <GifCard key={gif.id} title={gif.title} url={gif.url} />\r\n        ))}\r\n        </div>\r\n        </>\r\n      )\r\n     }   \r\n     </>  \r\n     */\r\n   \r\n      \r\n  )\r\n}\r\n\r\n/*\r\n<>\r\n  {data.length > 0 ? (\r\n    <div>\r\n      <h1 className=\"titulo\">{busqueda}</h1>\r\n    </div>\r\n  ) : (\r\n    \r\n  )}\r\n</>;\r\n\r\ndata.length > 0 ? \r\n<h1 className=\"titulo\">{busqueda}</h1>\r\n: { loading ? \r\n  <h1 className=\"titulo\">Cargando Gifs...</h1>\r\n : (\r\n  <div className=\"row\">\r\n    {data.map((gif) => (\r\n      <GifCard key={gif.id} title={gif.title} url={gif.url} />\r\n    ))}\r\n  </div>\r\n)} \r\n*/\r\n","import {useState,useEffect} from 'react'\r\nimport {getGifts} from '../helpers/GetGifts'\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifts(categoria)\r\n        .then(gif => { \r\n                 setstate({\r\n                    data: gif,\r\n                    loading: false\r\n                 })\r\n        });\r\n       \r\n    }, [categoria]); //ejecutar el efecto una sola vez.\r\n    \r\n\r\n    \r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifResults } from \"./GifResults\";\r\nimport { useFetchGifs } from \"../Hooks/useFetchGifs\";\r\n\r\nfunction GifApp() {\r\n  //const categorias = ['Anime','Accion','Humor'];\r\n  const [categorias, setcategorias] = useState([]);\r\n  const loading = true;\r\n  return (\r\n    <div>\r\n      <h1 className=\"titulo_main\">GIFAPP</h1>\r\n      <AddCategory setcategorias={setcategorias} />\r\n      <hr />\r\n      {categorias.map((categoria, i) => {\r\n          //console.log(\"La categoria buscada es: \" + categoria);\r\n          //console.log(categorias);\r\n          //console.log(\"La categoria buscada es : \"+categoria);\r\n          //console.log(\"todas tus categorias ordenadas son: \"+categorias)\r\n        \r\n          return (\r\n         \r\n            // <GifResults\r\n            // busqueda = {categoria}\r\n            // key={i} />\r\n            <GifResults key={i} busqueda={categoria} />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\nexport default GifApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './components/GifApp'\n\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}